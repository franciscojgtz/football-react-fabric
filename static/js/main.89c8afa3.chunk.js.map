{"version":3,"sources":["Components/StandingsTableList/StandingsTableListColumns.tsx","Components/StandingsTableList/StandingsTableList.tsx","API/standings.ts","Components/StandingsCommandBar/StandingsCommandBar.tsx","Components/StandingsCommandBar/StandingsCommandBarCommands.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["addDefaultSrc","ev","target","src","standingsTableListColumns","key","name","fieldName","minWidth","maxWidth","isResizable","onRender","item","react_default","a","createElement","width","height","crestUrl","onError","StandingsTableList","props","standings","DetailsList","items","columns","getStandingsFromAPI","_x","_getStandingsFromAPI","apply","this","arguments","_callee","leagueID","response","regenerator_default","wrap","_context","prev","next","fetch","concat","headers","X-Auth-Token","sent","abrupt","json","stop","getStandingsData","_x2","_getStandingsData","_callee2","standingsTable","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","standing","leagueName","league","_context2","then","table","undefined","Symbol","iterator","done","value","team","id","position","points","playedGames","won","draw","lost","goalsFor","goalsAgainst","goalDifference","push","t0","return","finish","competition","StandingsCommandBar","updateStandings","commands","text","onClick","CommandBar","App","_React$Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","mark","setState","state","inherits","createClass","_componentDidMount","Fabric","className","StandingsCommandBar_StandingsCommandBar","Breadcrumb","StandingsTableList_StandingsTableList","React","Component","Boolean","window","location","hostname","match","mergeStyles","selectors",":global(body), :global(html), :global(#root)","margin","padding","ReactDOM","render","Customizer","FluentCustomizations","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89c8afa3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { IStandingsTableListItem } from \"./StandingsTableList\";\r\nimport { IColumn } from \"office-ui-fabric-react\";\r\n\r\nfunction addDefaultSrc(ev: any) {\r\n  ev.target.src =\r\n    \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Soccerball.svg\";\r\n}\r\n\r\nexport const standingsTableListColumns: IColumn[] = [\r\n  {\r\n    key: \"positionColumn\",\r\n    name: \"Pos\",\r\n    fieldName: \"position\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingCrestColumn\",\r\n    name: \"Logo\",\r\n    minWidth: 20,\r\n    maxWidth: 50,\r\n    isResizable: true,\r\n    onRender: (item: IStandingsTableListItem) => {\r\n      return (\r\n        <img\r\n          width=\"20\"\r\n          height=\"20\"\r\n          src={item.crestUrl}\r\n          onError={addDefaultSrc}\r\n        />\r\n      );\r\n    }\r\n  },\r\n  {\r\n    key: \"standingNameColumn\",\r\n    name: \"Name\",\r\n    fieldName: \"name\",\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingPlayedGamesColumn\",\r\n    name: \"PG\",\r\n    fieldName: \"playedGames\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingWonColumn\",\r\n    name: \"Won\",\r\n    fieldName: \"won\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingDrawColumn\",\r\n    name: \"Draw\",\r\n    fieldName: \"draw\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingLostColumn\",\r\n    name: \"Lost\",\r\n    fieldName: \"lost\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingGoalsForColumn\",\r\n    name: \"Gl+\",\r\n    fieldName: \"goalsFor\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingGoalsAgainstColumn\",\r\n    name: \"Gl-\",\r\n    fieldName: \"goalsAgainst\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingGoalDifferenceColumn\",\r\n    name: \"Gl+/-\",\r\n    fieldName: \"goalDifference\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  },\r\n  {\r\n    key: \"standingPointsColumn\",\r\n    name: \"Pts\",\r\n    fieldName: \"points\",\r\n    minWidth: 10,\r\n    maxWidth: 50,\r\n    isResizable: true\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { DetailsList, IColumn } from \"office-ui-fabric-react\";\r\nimport { standingsTableListColumns } from \"./StandingsTableListColumns\";\r\n\r\nexport interface IStandingsTableListItem {\r\n  key: number;\r\n  name: string;\r\n  position: string;\r\n  crestUrl: string;\r\n  points: number;\r\n  playedGames: number;\r\n  won: number;\r\n  draw: number;\r\n  lost: number;\r\n  goalsFor: number;\r\n  goalsAgainst: number;\r\n  goalDifference: number;\r\n}\r\n\r\nexport interface IStandingsTableListState {\r\n  items: IStandingsTableListItem[];\r\n}\r\n\r\nexport interface IStandingsTableListProps {\r\n  standings: IStandingsTableListItem[];\r\n}\r\nexport const StandingsTableList: React.FunctionComponent<\r\n  IStandingsTableListProps\r\n> = (props: IStandingsTableListProps) => {\r\n  const standings = props.standings;\r\n  return <DetailsList items={standings} columns={standingsTableListColumns} />;\r\n};\r\n","import { IStandingsTableListItem } from \"../Components/StandingsTableList/StandingsTableList\";\r\n\r\nexport interface IStandingsLeague {\r\n  team: IStandingsTableListItem[];\r\n  leagueName: string;\r\n}\r\n\r\nexport async function getStandingsFromAPI(leagueID: number): Promise<any> {\r\n  const response = await fetch(\r\n    `http://api.football-data.org/v2/competitions/${leagueID}/standings`,\r\n    {\r\n      headers: { \"X-Auth-Token\": \"06ce053959a04bb8adf57acba0586981\" }\r\n    }\r\n  );\r\n\r\n  return response.json();\r\n}\r\n\r\nexport async function getStandingsData(\r\n  leagueID: number\r\n): Promise<IStandingsLeague> {\r\n  const response = await getStandingsFromAPI(leagueID).then(items => items);\r\n  let items: IStandingsTableListItem[] = [];\r\n  const standingsTable =\r\n    (response.standings &&\r\n      response.standings[0] &&\r\n      response.standings[0].table) ||\r\n    [];\r\n  for (const standing of standingsTable) {\r\n    const item = {\r\n      key: standing.team.id,\r\n      name: standing.team.name,\r\n      position: standing.position,\r\n      crestUrl: standing.team.crestUrl,\r\n      points: standing.points,\r\n      playedGames: standing.playedGames,\r\n      won: standing.won,\r\n      draw: standing.draw,\r\n      lost: standing.lost,\r\n      goalsFor: standing.goalsFor,\r\n      goalsAgainst: standing.goalsAgainst,\r\n      goalDifference: standing.goalDifference\r\n    };\r\n\r\n    items.push(item);\r\n  }\r\n\r\n  const leagueName =\r\n    (response && response.competition && response.competition.name) || \"\";\r\n  const league: IStandingsLeague = {\r\n    team: items,\r\n    leagueName\r\n  };\r\n  return league;\r\n}\r\n","import React from \"react\";\r\nimport { CommandBar } from \"office-ui-fabric-react\";\r\nimport { getStandingsCommandBarCommands } from \"./StandingsCommandBarCommands\";\r\n\r\nexport interface IStandingsCommandBar {\r\n  updateStandings: (leagueID: number) => Promise<void>;\r\n}\r\n\r\nexport const StandingsCommandBar: React.FunctionComponent<\r\n  IStandingsCommandBar\r\n> = (props: IStandingsCommandBar) => {\r\n  const commands = getStandingsCommandBarCommands(props.updateStandings);\r\n  return <CommandBar items={commands} />;\r\n};\r\n","import { ICommandBarItemProps } from \"office-ui-fabric-react/lib/components/CommandBar\";\r\n\r\nexport function getStandingsCommandBarCommands(\r\n  updateStandings: (leagueID: number) => Promise<void>\r\n): ICommandBarItemProps[] {\r\n  return [\r\n    {\r\n      key: \"SpainCommand\",\r\n      text: \"Spain\",\r\n      onClick: () => {\r\n        updateStandings(2014);\r\n      }\r\n    },\r\n    {\r\n      key: \"EnglandCommand\",\r\n      text: \"England\",\r\n      onClick: () => {\r\n        updateStandings(2021);\r\n      }\r\n    },\r\n    {\r\n      key: \"BrazilCommand\",\r\n      text: \"Brazil\",\r\n      onClick: () => {\r\n        updateStandings(2013);\r\n      }\r\n    },\r\n    {\r\n      key: \"FranceCommand\",\r\n      text: \"France\",\r\n      onClick: () => {\r\n        updateStandings(2015);\r\n      }\r\n    },\r\n    {\r\n      key: \"GermanyCommand\",\r\n      text: \"Germany\",\r\n      onClick: () => {\r\n        updateStandings(2002);\r\n      }\r\n    },\r\n    {\r\n      key: \"NetherlandsCommand\",\r\n      text: \"Netherlands\",\r\n      onClick: () => {\r\n        updateStandings(2003);\r\n      }\r\n    },\r\n    {\r\n      key: \"PortugalCommand\",\r\n      text: \"Portugal\",\r\n      onClick: () => {\r\n        updateStandings(2017);\r\n      }\r\n    },\r\n    {\r\n      key: \"ItalyCommand\",\r\n      text: \"Italy\",\r\n      onClick: () => {\r\n        updateStandings(2019);\r\n      }\r\n    }\r\n  ];\r\n}\r\n","import React from \"react\";\r\nimport { Fabric, Breadcrumb } from \"office-ui-fabric-react\";\r\nimport {\r\n  StandingsTableList,\r\n  IStandingsTableListItem\r\n} from \"./Components/StandingsTableList/StandingsTableList\";\r\nimport { getStandingsData } from \"./API/standings\";\r\nimport { StandingsCommandBar } from \"./Components/StandingsCommandBar/StandingsCommandBar\";\r\nimport \"./App.css\";\r\n\r\nexport interface IAppProps {}\r\n\r\nexport interface IAppState {\r\n  leagueID: number;\r\n  leagueName: string;\r\n  standings: IStandingsTableListItem[];\r\n}\r\n\r\nexport class App extends React.Component<IAppProps, IAppState> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n    this.state = {\r\n      leagueID: 2014,\r\n      leagueName: \"\",\r\n      standings: []\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const league = await getStandingsData(this.state.leagueID).then(\r\n      league => league\r\n    );\r\n    const standings = league.team;\r\n    const leagueName = league.leagueName;\r\n    this.setState({ standings, leagueName });\r\n  }\r\n\r\n  private updateStandings = async (leagueID: number) => {\r\n    const league = await getStandingsData(leagueID).then(league => league);\r\n    const standings = league.team;\r\n    const leagueName = league.leagueName;\r\n    this.setState({ leagueID, standings, leagueName });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fabric>\r\n        <div className=\"app-container\">\r\n          <StandingsCommandBar updateStandings={this.updateStandings} />\r\n          <Breadcrumb items={[{ key: \"test\", text: this.state.leagueName }]} />\r\n          <StandingsTableList standings={this.state.standings} />\r\n        </div>\r\n      </Fabric>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\nimport { FluentCustomizations } from \"@uifabric/fluent-theme\";\r\nimport { Customizer, mergeStyles } from \"office-ui-fabric-react\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    \":global(body), :global(html), :global(#root)\": {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: \"100vh\"\r\n    }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <Customizer {...FluentCustomizations}>\r\n    <App />\r\n  </Customizer>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}